message(STATUS USING_TOOLCHAIN:${CMAKE_TOOLCHAIN_FILE})

# Flags
set(DBGFLG "-gdwarf-2 -Og")
set(LINKFLG "-Wl,-dead_strip")
set(PROJECT_FLAGS "-Wall -Wshadow -fdata-sections -ffunction-sections")

# Compiler
set(CMAKE_ASM_COMPILER clang)
set(CMAKE_ASM_FLAGS_DEBUG "${PROJECT_FLAGS} ${DBGFLG}")
set(CMAKE_ASM_FLAGS_RELEASE "${PROJECT_FLAGS} -O2")

set(CMAKE_C_COMPILER clang)
set(CMAKE_C_FLAGS_DEBUG "${PROJECT_FLAGS} ${DBGFLG}")
set(CMAKE_C_FLAGS_RELEASE "${PROJECT_FLAGS} -O2")
set(CMAKE_C_STANDARD 99)
set(CMAKE_C_STANDARD_REQUIRED ON)

set(CMAKE_CXX_COMPILER clang++)
set(CMAKE_CXX_FLAGS_DEBUG "${PROJECT_FLAGS} ${DBGFLG}")
set(CMAKE_CXX_FLAGS_RELEASE "${PROJECT_FLAGS} -O2")
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

set(CMAKE_EXE_LINKER_FLAGS "${LIBFLG} ${LINKFLG}")

# Other tools
set(CMAKE_OBJCOPY llvm-objcopy)
set(CMAKE_OBJDUMP llvm-objdump)
set(CMAKE_SIZE size)
set(CMAKE_DEBUGGER lldb)
set(CMAKE_CPPFILT c++filt)

# Output type and destination
set(CMAKE_BUILD_TYPE Debug)
set(PROJECT_BINARY_DIR ${PROJECT_SOURCE_DIR}/build)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/lib)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/bin)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/bin)
set(CMAKE_SHADER_OUTPUT_DIRECTORY ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/shaders)
